
** Conflict (shift/reduce) in state 165.
** Token involved: LPAREN
** This state is reached from program after reading:

LET identifier option(preceded(COLON,located(type_scheme))) EQUAL constructor LBRACKET separated_nonempty_list(COMMA,located(ty)) RBRACKET 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

program 
list(located(definition)) EOF 
definition list(located(definition)) 
vdefinition 
LET identifier option(preceded(COLON,located(type_scheme))) EQUAL expr1 
                                                                  expr2 
                                                                  expr3 
                                                                  (?)

** In state 165, looking ahead at LPAREN, reducing production
** expr5 -> constructor LBRACKET separated_nonempty_list(COMMA,located(ty)) RBRACKET 
** is permitted because of the following sub-derivation:

expr3 expr4 // lookahead token appears because expr4 can begin with LPAREN
expr4 // lookahead token is inherited
expr5 // lookahead token is inherited
constructor LBRACKET separated_nonempty_list(COMMA,located(ty)) RBRACKET . 

** In state 165, looking ahead at LPAREN, shifting is permitted
** because of the following sub-derivation:

expr4 
expr5 
constructor LBRACKET separated_nonempty_list(COMMA,located(ty)) RBRACKET . LPAREN separated_nonempty_list(COMMA,located(expr1)) RPAREN 
